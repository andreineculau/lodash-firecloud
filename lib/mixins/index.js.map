{"version":3,"sources":["../../src/mixins/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;yMAAE;;;;AAKA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;AAiBI;;AAEA;;;;;;;;;;;;;;;;;;;AAmBF;;AAEA;;;;;;;;AAQF;;;AAGA;;;AAGA;;;;;AAKA;;;;;;;;;;;;;AAaA;;;AAGA;;;;;;;;;;;;;AAaA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;;;;AAOA;;;;;;;;;;;;AAYM,4C;;;AAGI;;;;AAIA;;;;;;;AAOA,+D;;;;AAIA,iE;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CV","file":"index.js","sourcesContent":["// This module run at compile-time and produce a map of mixinVarName to mixinModule.\n// This allows for new mixins to be added just by placing a new module under the `mixins` folder.\n// Have a look at `src/index.js` for how this module's exports are used.\n\n// @preval\n\n// eslint-disable-next-line import/no-unassigned-import\nrequire('@babel/register');\n\nlet _ = require('lodash');\nlet fs = require('fs');\nlet path = require('path');\n\nlet mixinModules = fs.readdirSync(path.join(__dirname));\nmodule.exports = _.reduce(mixinModules, function(acc, mixinModule) {\n  if (path.extname(mixinModule) !== '.js') {\n    return acc;\n  }\n\n  if (mixinModule === '.eslintrc.js') {\n    return acc;\n  }\n\n  if (mixinModule === 'index.js') {\n    return acc;\n  }\n\n  // eslint-disable-next-line global-require\n  mixinModule = require(`./${mixinModule}`);\n\n  let mixins = _.omit(mixinModule, [\n    'default'\n  ]);\n\n  acc = _.merge(acc, mixins);\n  return acc;\n}, {});\n"]}