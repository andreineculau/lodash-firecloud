{"version":3,"sources":["../../src/mixins/get-v8-open-handles.js"],"names":[],"mappings":"2KAAA;;AAEA,IAAI,WAAJ,C;AACA,IAAI,YAAJ,C;;AAEA,IAAI,KAAK,GAAG,UAAS,CAAT,EAAY;AACtB,yBAAA,YAAY,GAAG,IAAI,GAAJ,EAAf;AACA,MAAI,IAAI,GAAG,oBAAY,UAAZ,CAAuB;AAChC;AACA,IAAA,IAAI,EAAE,UAAS,OAAT,EAAkB,IAAlB,EAAwB,cAAxB,EAAwC,QAAxC,EAAkD;AACtD,UAAI,gBAAgB,GAAG,oBAAY,gBAAZ,EAAvB;AACA,UAAI,UAAU,GAAG,CAAC,CAAC,aAAF,EAAjB;;AAEA;AACA,MAAA,UAAU,CAAC,KAAX;;AAEA,2BAAa,GAAb,CAAiB,OAAjB,EAA0B;AACxB,QAAA,IAAI,EAAE,IAAI,CAAC,GAAL,EADkB,EACN;AAClB,QAAA,OAFwB;AAGxB,QAAA,IAHwB;AAIxB,QAAA,cAJwB;AAKxB,QAAA,QALwB;AAMxB,QAAA,gBANwB;AAOxB,QAAA,UAPwB,EAA1B;;AASD,KAlB+B;;AAoBhC,IAAA,OAAO,EAAE,UAAS,OAAT,EAAkB;AACzB,UAAI,CAAC,qBAAa,GAAb,CAAiB,OAAjB,CAAL,EAAgC;AAC9B;AACD;;AAED,2BAAa,MAAb,CAAoB,OAApB;AACD,KA1B+B,EAAvB,CAAX;;;AA6BA,EAAA,IAAI,CAAC,MAAL;;AAEA,SAAO,IAAP;AACD,CAlCD,C;;AAoCO,IAAI,gBAAgB,GAAG,UAAS,GAAG,GAAG,EAAf,EAAmB;AAC/C;AACA,MAAI,CAAC,GAAG,IAAR;;AAEA,EAAA,GAAG,GAAG,CAAC,CAAC,QAAF,CAAW,GAAX,EAAgB;AACpB,IAAA,SAAS,EAAE;AACT,iBADS,CADS,EAAhB,CAAN;;;;AAMA;AACA;AACA,MAAI,UAAU,GAAG,OAAO,MAAP,IAAiB,QAAjB,IAA6B,MAAM,KAAK,IAAxC,IAAgD,MAAM,CAAC,MAAP,KAAkB,MAAlE,IAA4E,MAA7F;;AAEA,wBAAA,WAAW,GAAG,UAAU,CAAC,OAAX,CAAmB,aAAnB,CAAd;;AAEA,MAAI,CAAC,CAAC,WAAF,CAAc,gBAAgB,CAAC,IAA/B,CAAJ,EAA0C;AACxC,IAAA,gBAAgB,CAAC,IAAjB,GAAwB,cAAM,CAAN,CAAxB;AACD;;AAED,MAAI,aAAa,GAAG;AAClB,KAAG,qBAAa,MAAb,EADe,CAApB;;;AAIA,OAAK,IAAI,MAAT,IAAmB,aAAnB,EAAkC;AAChC,SAAK,IAAI,QAAT,IAAqB,GAAG,CAAC,SAAzB,EAAoC;AAClC,MAAA,MAAM,CAAC,UAAP,GAAoB,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,UAAhB,EAA4B,UAAS,QAAT,EAAmB;AACjE,YAAI,QAAQ,GAAG,QAAQ,CAAC,WAAT,EAAf;AACA,YAAI,CAAC,CAAC,SAAF,CAAY,QAAZ,KAAyB,QAAQ,CAAC,IAAT,CAAc,QAAd,CAA7B,EAAsD;AACpD,iBAAO,KAAP;AACD;AACD,eAAO,IAAP;AACD,OANmB,CAApB;AAOD;AACF;;AAED,EAAA,MAAM,CAAC,cAAP,CAAsB,aAAtB,EAAqC,QAArC,EAA+C;AAC7C,IAAA,YAAY,EAAE,IAD+B;AAE7C,IAAA,UAAU,EAAE,KAFiC;AAG7C,IAAA,QAAQ,EAAE,KAHmC;;AAK7C,IAAA,KAAK,EAAE,YAAW;AAChB,UAAI,OAAO,GAAG,EAAd;AACA,WAAK,IAAI,MAAT,IAAmB,IAAnB,EAAyB;AACvB,YAAI,KAAK,GAAG,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe;AACzB,kBADyB,CAAf,CAAZ;;;AAIA,QAAA,KAAK,CAAC,UAAN,GAAmB,CAAC,CAAC,GAAF,CAAM,KAAK,CAAC,UAAZ,EAAwB,UAAS,QAAT,EAAmB;AAC5D,cAAI,cAAc,GAAG;AACnB,YAAA,SAAS,EAAE,QAAQ,CAAC,QAAT,EADQ;;AAGnB;AACA,YAAA,QAAQ,EAAE,QAAQ,CAAC,WAAT,EAJS;AAKnB;AACA,YAAA,YAAY,EAAE,QAAQ,CAAC,eAAT,EANK;AAOnB,YAAA,UAAU,EAAE,QAAQ,CAAC,aAAT,EAPO;AAQnB,YAAA,QAAQ,EAAE,QAAQ,CAAC,WAAT,EARS;AASnB,YAAA,UAAU,EAAE,QAAQ,CAAC,aAAT,EATO;AAUnB,YAAA,eAAe,EAAE,QAAQ,CAAC,eAAT,EAVE;AAWnB,YAAA,aAAa,EAAE,QAAQ,CAAC,aAAT,EAXI;AAYnB,YAAA,UAAU,EAAE,QAAQ,CAAC,UAAT,EAZO;AAanB,YAAA,MAAM,EAAE,QAAQ,CAAC,MAAT,EAbW;AAcnB,YAAA,QAAQ,EAAE,QAAQ,CAAC,QAAT,EAdS;AAenB,YAAA,aAAa,EAAE,QAAQ,CAAC,aAAT,EAfI;AAgBnB,YAAA,OAAO,EAAE,QAAQ,CAAC,OAAT,EAhBU;AAiBnB,YAAA,YAAY,EAAE,QAAQ,CAAC,YAAT,EAjBK;AAkBnB,YAAA,eAAe,EAAE,QAAQ,CAAC,eAAT,EAlBE,EAArB;;;AAqBA,cAAI,QAAQ,CAAC,MAAT,EAAJ,EAAuB;AACrB,gBAAI,OAAO,GAAG,QAAQ,CAAC,aAAT,GAAyB,KAAzB,CAA+B,sBAA/B,KAA0D,EAAxE;AACA,YAAA,CAAC,CAAC,KAAF,CAAQ,cAAR,EAAwB;AACtB,cAAA,YAAY,EAAE,QADQ;AAEtB,cAAA,QAAQ,EAAE,OAAO,CAAC,CAAD,CAFK;AAGtB,cAAA,UAAU,EAAE,OAAO,CAAC,CAAD,CAHG,EAAxB;;AAKD;;AAED,iBAAO,cAAP;AACD,SAhCkB,CAAnB;;AAkCA,QAAA,OAAO,CAAC,IAAR,CAAa,KAAb;AACD;;AAED,aAAO,OAAP;AACD,KAlD4C,EAA/C;;;AAqDA,EAAA,MAAM,CAAC,cAAP,CAAsB,aAAtB,EAAqC,UAArC,EAAiD;AAC/C,IAAA,YAAY,EAAE,IADiC;AAE/C,IAAA,UAAU,EAAE,KAFmC;AAG/C,IAAA,QAAQ,EAAE,KAHqC;;AAK/C,IAAA,KAAK,EAAE,YAAW;AAChB,UAAI,KAAK,GAAG,EAAZ;AACA,WAAK,IAAI,MAAT,IAAmB,IAAnB,EAAyB;AACvB,YAAI,WAAW,GAAG,EAAlB;AACA,QAAA,WAAW,CAAC,IAAZ,CAAiB,IAAI,IAAJ,CAAS,MAAM,CAAC,IAAhB,EAAsB,WAAtB,EAAjB;AACA,QAAA,WAAW,CAAC,IAAZ,CAAiB,CAAC,CAAC,IAAF,CAAO;AACrB,WAAE,MAAM,CAAC,IAAK,IAAG,MAAM,CAAC,OAAQ,IADX;AAErB,oBAAW,MAAM,CAAC,cAAe,GAFZ;AAGrB,sBAAa,MAAM,CAAC,gBAAiB,EAHhB,CAAP;AAId,WAJc,CAAjB;;AAMA,aAAK,IAAI,QAAT,IAAqB,MAAM,CAAC,UAA5B,EAAwC;AACtC,UAAA,WAAW,CAAC,IAAZ,CAAkB,QAAO,QAAQ,CAAC,QAAT,EAAoB,EAA7C;AACD;;AAED,QAAA,WAAW,GAAG,CAAC,CAAC,IAAF,CAAO,WAAP,EAAoB,IAApB,CAAd;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,WAAX;AACD;;AAED,MAAA,KAAK,GAAG,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,MAAd,CAAR;;AAEA,aAAO,KAAP;AACD,KA3B8C,EAAjD;;;AA8BA,SAAO,aAAP;AACD,CAxHM,C","file":"get-v8-open-handles.js","sourcesContent":["// NOTE global.require is a trick for webpack to ignore bundling the module\n\nlet _asyncHooks;\nlet _openHandles;\n\nlet _init = function(_) {\n  _openHandles = new Map();\n  let hook = _asyncHooks.createHook({\n    // eslint-disable-next-line max-params\n    init: function(asyncId, type, triggerAsyncId, resource) {\n      let executionAsyncId = _asyncHooks.executionAsyncId();\n      let stackTrace = _.getStackTrace();\n\n      // ignore ourselves\n      stackTrace.shift();\n\n      _openHandles.set(asyncId, {\n        time: Date.now(), // not `new Date()` for performance reasons\n        asyncId,\n        type,\n        triggerAsyncId,\n        resource,\n        executionAsyncId,\n        stackTrace\n      });\n    },\n\n    destroy: function(asyncId) {\n      if (!_openHandles.has(asyncId)) {\n        return;\n      }\n\n      _openHandles.delete(asyncId);\n    }\n  });\n\n  hook.enable();\n\n  return hook;\n};\n\nexport let getV8OpenHandles = function(cfg = {}) {\n  // eslint-disable-next-line consistent-this, babel/no-invalid-this\n  let _ = this;\n\n  cfg = _.defaults(cfg, {\n    skipFiles: [\n      /^internal\\//\n    ]\n  });\n\n  // see https://github.com/lodash/lodash/blob/4ea8c2ec249be046a0f4ae32539d652194caf74f/.internal/freeGlobal.js\n  // eslint-disable-next-line eqeqeq, no-null/no-null\n  let freeGlobal = typeof global == 'object' && global !== null && global.Object === Object && global;\n\n  _asyncHooks = freeGlobal.require('async_hooks');\n\n  if (_.isUndefined(getV8OpenHandles.hook)) {\n    getV8OpenHandles.hook = _init(_);\n  }\n\n  let v8OpenHandles = [\n    ..._openHandles.values()\n  ];\n\n  for (let handle of v8OpenHandles) {\n    for (let skipFile of cfg.skipFiles) {\n      handle.stackTrace = _.filter(handle.stackTrace, function(callSite) {\n        let fileName = callSite.getFileName();\n        if (_.isDefined(fileName) && skipFile.test(fileName)) {\n          return false;\n        }\n        return true;\n      });\n    }\n  }\n\n  Object.defineProperty(v8OpenHandles, 'toJSON', {\n    configurable: true,\n    enumerable: false,\n    writable: false,\n\n    value: function() {\n      let entries = [];\n      for (let handle of this) {\n        let entry = _.omit(handle, [\n          'resource'\n        ]);\n\n        entry.stackTrace = _.map(entry.stackTrace, function(callSite) {\n          let staticCallSite = {\n            _toString: callSite.toString(),\n\n            // this: callSite.getThis(),\n            typeName: callSite.getTypeName(),\n            // function: callSite.getFunction(),\n            functionName: callSite.getFunctionName(),\n            methodName: callSite.getMethodName(),\n            fileName: callSite.getFileName(),\n            lineNumber: callSite.getLineNumber(),\n            getColumnNumber: callSite.getColumnNumber(),\n            getEvalOrigin: callSite.getEvalOrigin(),\n            isToplevel: callSite.isToplevel(),\n            isEval: callSite.isEval(),\n            isNative: callSite.isNative(),\n            isConstructor: callSite.isConstructor(),\n            isAsync: callSite.isAsync(),\n            isPromiseAll: callSite.isPromiseAll(),\n            getPromiseIndex: callSite.getPromiseIndex()\n          };\n\n          if (callSite.isEval()) {\n            let matched = callSite.getEvalOrigin().match(/\\((.*):(\\d*):(\\d*)\\)/) || {};\n            _.merge(staticCallSite, {\n              functionName: '<eval>',\n              fileName: matched[1],\n              lineNumber: matched[2]\n            });\n          }\n\n          return staticCallSite;\n        });\n\n        entries.push(entry);\n      }\n\n      return entries;\n    }\n  });\n\n  Object.defineProperty(v8OpenHandles, 'toString', {\n    configurable: true,\n    enumerable: false,\n    writable: false,\n\n    value: function() {\n      let lines = [];\n      for (let handle of this) {\n        let handleLines = [];\n        handleLines.push(new Date(handle.time).toISOString());\n        handleLines.push(_.join([\n          `${handle.type}(${handle.asyncId}):`,\n          `trigger: ${handle.triggerAsyncId},`,\n          `execution: ${handle.executionAsyncId}`\n        ], ' '));\n\n        for (let callSite of handle.stackTrace) {\n          handleLines.push(`  at ${callSite.toString()}`);\n        }\n\n        handleLines = _.join(handleLines, '\\n');\n        lines.push(handleLines);\n      }\n\n      lines = _.join(lines, '\\n\\n');\n\n      return lines;\n    }\n  });\n\n  return v8OpenHandles;\n};\n"]}