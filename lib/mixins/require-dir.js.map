{"version":3,"sources":["../../src/mixins/require-dir.js"],"names":[],"mappings":"wGAAA;;AAEO,IAAI,UAAU,GAAG,UAAS,GAAT,EAAc;AACpC;AACA,MAAI,CAAC,GAAG,IAAR;;AAEA;AACA;AACA,MAAI,UAAU,GAAG,OAAO,MAAP,IAAiB,QAAjB,IAA6B,MAAM,KAAK,IAAxC,IAAgD,MAAM,CAAC,MAAP,KAAkB,MAAlE,IAA4E,MAA7F;;AAEA,MAAI,CAAC,UAAU,CAAC,OAAhB,EAAyB;AACvB,UAAM,IAAI,KAAJ,CAAU,gFAAV,CAAN;AACD;;AAED,MAAI,EAAE,GAAG,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAT;AACA,MAAI,IAAI,GAAG,UAAU,CAAC,OAAX,CAAmB,MAAnB,CAAX;;AAEA,MAAI,KAAK,GAAG,EAAE,CAAC,WAAH,CAAe,GAAf,CAAZ;AACA,MAAI,iBAAiB,GAAG,CAAC,CAAC,IAAF,CAAO,UAAU,CAAC,OAAX,CAAmB,UAA1B,CAAxB;;AAEA,EAAA,KAAK,GAAG,CAAC,CAAC,MAAF,CAAS,KAAT,EAAgB,UAAS,IAAT,EAAe;AACrC,WAAO,CAAC,CAAC,QAAF,CAAW,iBAAX,EAA8B,IAAI,CAAC,OAAL,CAAa,IAAb,CAA9B,CAAP;AACD,GAFO,CAAR;;AAIA,EAAA,KAAK,GAAG,CAAC,CAAC,GAAF,CAAM,KAAN,EAAa,UAAS,IAAT,EAAe;AAClC,WAAO,IAAI,CAAC,IAAL,CAAU,GAAV,EAAe,IAAf,CAAP;AACD,GAFO,CAAR;;AAIA,MAAI,OAAO,GAAG,CAAC,CAAC,GAAF,CAAM,KAAN,EAAa,UAAS,IAAT,EAAe;AACxC;AACA,QAAI,QAAQ,GAAG,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAf;AACA,WAAO,QAAP;AACD,GAJa,CAAd;;AAMA,SAAO,OAAP;AACD,CAjCM,C","file":"require-dir.js","sourcesContent":["// NOTE global.require is a trick for webpack to ignore bundling the module\n\nexport let requireDir = function(dir) {\n  // eslint-disable-next-line consistent-this, babel/no-invalid-this\n  let _ = this;\n\n  // see https://github.com/lodash/lodash/blob/4ea8c2ec249be046a0f4ae32539d652194caf74f/.internal/freeGlobal.js\n  // eslint-disable-next-line eqeqeq, no-null/no-null\n  let freeGlobal = typeof global == 'object' && global !== null && global.Object === Object && global;\n\n  if (!freeGlobal.require) {\n    throw new Error('global.require seems to be undefined. NOTE requireDir is a Node.js-only mixin.');\n  }\n\n  let fs = freeGlobal.require('fs');\n  let path = freeGlobal.require('path');\n\n  let files = fs.readdirSync(dir);\n  let requireExtensions = _.keys(freeGlobal.require.extensions);\n\n  files = _.filter(files, function(file) {\n    return _.includes(requireExtensions, path.extname(file));\n  });\n\n  files = _.map(files, function(file) {\n    return path.join(dir, file);\n  });\n\n  let modules = _.map(files, function(file) {\n    // eslint-disable-next-line global-require\n    let getProps = freeGlobal.require(file);\n    return getProps;\n  });\n\n  return modules;\n};\n"]}