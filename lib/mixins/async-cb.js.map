{"version":3,"sources":["../../src/mixins/async-cb.ts"],"names":[],"mappings":";;;;;;;AAOA;;;;;;;;;;;;AAYO,IAAI,OAAO,GAAG,UAAkC,EAAlC,EAAkE;AACrF,SAAO,UAAS,GAAG,IAAZ,EAAkB;AACvB;AACA,IAAA,EAAE,CAAC,GAAG,IAAJ,CAAF,CAAY,KAAZ,CAAkB,UAAS,GAAT,EAAc;AAC9B,YAAM,GAAN;AACD,KAFD;AAGD,GALD;AAMD,CAPM,C","file":"async-cb.js","sourcesContent":["import _ from 'lodash';\n\nimport {\n  AsyncFn,\n  Fn\n} from '../types';\n\n/**\n * Part of `lodash-firecloud`.\n *\n * Create a void-returning Function that executes an AsyncFunction with a catch handler.\n * It is intended to handle situations highlighted by @typescript-eslint/no-misused-promises eslint rule,\n * specifically the termination of the process for unhandled promise rejections.\n * See https://github.com/nodejs/node/issues/20392 .\n * See https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin .\n *\n * @param [callback] Async callback.\n * @returns Returns a sync callback wrapper.\n */\nexport let asyncCb = function<T extends AsyncFn<void>>(cb: T): Fn<void, Parameters<T>> {\n  return function(...args) {\n    // eslint-disable-next-line callback-return\n    cb(...args).catch(function(err) {\n      throw err;\n    });\n  };\n};\n"]}